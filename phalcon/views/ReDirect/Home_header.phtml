<!-- Extra details for Live View on GitHub Pages -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<link rel="apple-touch-icon" sizes="76x76" href="icon.png">
<link rel="icon" type="image/png" href="icon.png">
<base href="http://<?php echo $_SERVER['HTTP_HOST'] ; ?>">
<title>
    後台
</title>
<!--     Fonts and icons     -->
<link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700" />
<!-- Nucleo Icons -->
<link href="material-dashboard-master/assets/css/nucleo-icons.css" rel="stylesheet" />
<link href="material-dashboard-master/assets/css/nucleo-svg.css" rel="stylesheet" />
<!-- Font Awesome Icons -->
<script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
<!-- Material Icons -->
<link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
<!-- CSS Files -->
<!-- AngularJS Material CSS now available via Google CDN; version 1.2.1 used here -->
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/angular_material/1.2.1/angular-material.min.css">
<link id="pagestyle" href="material-dashboard-master/assets/css/material-dashboard.min.css?v=3.0.2" rel="stylesheet" />
<!-- Anti-flicker snippet (recommended)  -->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://kit.fontawesome.com/4e4a114ffc.js" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular-route.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular-animate.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular-aria.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular-messages.min.js"></script>
<script src="https://cdn3.devexpress.com/jslib/21.2.6/js/dx.all.js"></script>
<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/luna-object-viewer/luna-object-viewer.css" />
<script src="//cdn.jsdelivr.net/npm/luna-object-viewer/luna-object-viewer.js"></script>
<!-- AngularJS Material Javascript now available via Google CDN; version 1.2.1 used here -->
<script src="https://ajax.googleapis.com/ajax/libs/angular_material/1.2.1/angular-material.min.js"></script>

<script>
    var adonis = angular.module('Admin', ['ngRoute', 'ngMaterial', 'ngMessages', 'dx']);
    adonis.directive("imgUpload", function($http, $compile, $parse) {
            return {
                restrict: 'AE',
                require: '?ngModel',
                scope: {
                    url: "@",
                    method: "@"
                },
                template: '<input class="fileUpload" type="file" multiple />' +
                    '<div class="dropzone">' +
                    '<p class="msg">Click or Drag and Drop files to upload</p>' +
                    '</div>' +
                    '<div class="preview clearfix">' +
                    '<div class="previewData clearfix" ng-repeat="data in previewData track by $index">' +                   
                    '<div class="previewDetails">' +
                    '<div class="detail"><b>Name : </b>{{data.name}}</div>' +
                    '<div class="detail"><b>Type : </b>{{data.type}}</div>' +
                    '<div class="detail"><b>Size : </b> {{data.size}}</div>' +
                    '</div>' +
                    '<div class="previewControls">' +
                    '<span ng-click="upload(data)" class="circle upload">' +
                    '<i class="fa fa-check"></i>' +
                    '</span>' +
                    '<span ng-click="remove(data)" class="circle remove">' +
                    '<i class="fa fa-close"></i>' +
                    '</span>' +
                    '</div>' +
                    '</div>' +
                    '</div>',
                link: function(scope, elem, attrs, ngModelCtrl) {
                    var formData = new FormData();
                    var model = $parse(attrs.ngModel);

                    scope.previewData = [];

                    function previewFile(file) {
                        var reader = new FileReader();
                        var obj = new FormData().append('file', file);
                        reader.onload = function(data) {
                            var src = data.target.result;
                            var size = ((file.size / (1024 * 1024)) > 1) ? (file.size / (1024 * 1024)) + ' mB' : (file.size / 1024) + ' kB';
                            scope.$apply(function() {
                                scope.previewData.push({
                                    'name': file.name,
                                    'size': size,
                                    'type': file.type,
                                    'src': src,
                                    'data': obj
                                });
                            });
                            console.log(scope.previewData);
                        }
                        reader.readAsDataURL(file);
                    }

                    function uploadFile(e, type) {
                        e.preventDefault();
                        var files = "";
                        if (type == "formControl") {
                            files = e.target.files;
                        } else if (type === "drop") {
                            files = e.originalEvent.dataTransfer.files;
                        }
                        for (var i = 0; i < files.length; i++) {
                            var file = files[i];
                            if (file.type.indexOf("csv") !== -1) {
                                previewFile(file);
                            } else {
                                alert(file.name + " is not supported");
                            }
                        }
                    }
                    elem.find('.fileUpload').bind('change', function(e) {
                        uploadFile(e, 'formControl');
                    });

                    elem.find('.dropzone').bind("click", function(e) {
                        $compile(elem.find('.fileUpload'))(scope).trigger('click');
                    });

                    elem.find('.dropzone').bind("dragover", function(e) {
                        e.preventDefault();
                    });

                    elem.find('.dropzone').bind("drop", function(e) {
                        uploadFile(e, 'drop');
                    });
                    scope.upload = function(obj) {
                        obj.Seller = ngModelCtrl.$modelValue;
                        $http({
                            method: scope.method,
                            url: scope.url,
                            data: obj,
                            headers: {
                                'Content-Type': undefined
                            },
                            // transformRequest: angular.identity
                        }).then(function successCallback(response) {
                            var data = response.data;
                            console.info(data);
                            if(data.src) ngModelCtrl.$modelValue.push(data.src)

                        }, function errorCallback(response) {
                            console.info(response);

                        });
                    }

                    scope.remove = function(data) {
                        var index = scope.previewData.indexOf(data);
                        scope.previewData.splice(index, 1);
                    }
                }
            }
        });
    adonis.service('sharedData', function($http, $q, $mdToast) {
        var self = this;
        //Toast 
        var last = {
            bottom: true,
            top: false,
            left: false,
            right: true
        };
        self.toastPosition = angular.extend({}, last);

        self.getToastPosition = function() {
            sanitizePosition();

            return Object.keys(self.toastPosition)
                .filter(function(pos) {
                    return self.toastPosition[pos];
                }).join(' ');
        };

        function sanitizePosition() {
            var current = self.toastPosition;

            if (current.bottom && last.top) {
                current.top = false;
            }
            if (current.top && last.bottom) {
                current.bottom = false;
            }
            if (current.right && last.left) {
                current.left = false;
            }
            if (current.left && last.right) {
                current.right = false;
            }

            last = angular.extend({}, current);
        };

        self.Toast = function(Msg, timeout) {
            console.info('Toast', Msg, timeout);
            var pinTo = self.getToastPosition();
            var toast = $mdToast.simple()
                .textContent(Msg)
                .highlightAction(true)
                // Accent is used by default, this just demonstrates the usage.
                .highlightClass('md-accent')
                .position(pinTo)
                .hideDelay(timeout);

            $mdToast.show(toast)
        }
        self.showActionToast = function() {
            var pinTo = self.getToastPosition();
            var toast = $mdToast.simple()
                .textContent('Marked as read')
                .actionKey('z')
                .actionHint('Press the Control-"z" key combination to ')
                .action('UNDO')
                .dismissHint('Activate the Escape key to dismiss this toast.')
                .highlightAction(true)
                // Accent is used by default, this just demonstrates the usage.
                .highlightClass('md-accent')
                .position(pinTo)
                .hideDelay(0);

            $mdToast.show(toast)
                .then(function(response) {
                    if (response === 'ok') {
                        alert('You selected the \'UNDO\' action.');
                    } else {
                        $log.log('Toast dismissed.');
                    }
                }).catch(function() {
                    $log.log('Toast failed or was forced to close early by another toast.');
                });
        };
        self.Logout = function() {
            var Data = {}
            Data.UniqueID = "";
            var ReDirect = {
                'Action': 'Logout',
                'Data': JSON.stringify(Data),
            }
            var request = $http({
                method: "post",
                url: "http://<?PHP echo $_SERVER['HTTP_HOST']; ?>/api",
                data: ReDirect,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;'
                },
            }).then(function successCallback(response) {
                var data = response.data;
                location.reload();

            }, function errorCallback(response) {

            });
        }
        self.ReDirect = function(ReDirect) {
            var ReDirect = {
                UniqueID: "",
                ReDirect: ReDirect
            }
            var ReDirect = {
                'Action': 'ReDirect',
                'Data': JSON.stringify(ReDirect),
            }
            console.info(ReDirect);
            var request = $http({
                method: "post",
                url: "http://<?PHP echo $_SERVER['HTTP_HOST']; ?>/api",
                data: ReDirect,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;'
                },
            }).then(function successCallback(response) {
                var data = response.data;
                location.reload();
            }, function errorCallback(response) {

            });
        }
        //Edit
        self.Edit = function(data) {

            var request = $http({
                method: "post",
                url: "http://<?PHP echo $_SERVER['HTTP_HOST']; ?>/ApiEdit",
                data: data,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;'
                }
            }).then(function successCallback(response) {

                if (response.data.Data && response.data.Data.action) {
                    self.Toast('Marked as ' + response.data.Data.action, 3000);
                } else if (response.data.ErrorMsg) {
                    self.Toast('Marked as ' + response.data.ErrorMsg.join(","), 3000);
                } else console.info(response.data);
            }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.

            });
        };
        //List
        self.LtstData = {};
        self.List = function(data, key) {
            var deferred = $q.defer();
            var request = $http({
                method: "post",
                url: "http://<?PHP echo $_SERVER['HTTP_HOST']; ?>/api",
                data: data,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;'
                }
            }).then(function successCallback(response) {
                var data = response.data;
                var Data = {};
                Data.List = data[data.Action];
                Data.Pages = data.Pages;
                deferred.resolve(Data);
            }, function errorCallback(response) {
                deferred.reject(response);

            });

            return deferred.promise;
        };

        //Remove
        
        self.Remove = function(data) {
            var deferred = $q.defer();
            var request = $http({
                method: "post",
                url: "http://<?PHP echo $_SERVER['HTTP_HOST']; ?>/ApiRemove",
                data: data,
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8;'
                }
            }).then(function successCallback(response) {
                var data = response.data;
                var Data = {};
                Data.List = data[data.Action];
                Data.Pages = data.Pages;
                deferred.resolve(Data);
            }, function errorCallback(response) {
                deferred.reject(response);

            });

            return deferred.promise;
        };


    });
</script>
<style>
    .bg-gradient-primary {
        background-image: linear-gradient(195deg, #0b1048 0%, #4e5bb9 100%);
    }

    .shadow-primary {
        box-shadow: 0 4px 20px 0 rgb(0 0 0 / 14%), 0 7px 10px -5px rgb(34 10 143 / 37%) !important;
    }

    .btn-primary,
    .btn.bg-gradient-primary {
        box-shadow: 0 3px 3px 0 rgb(51 30 233 / 15%), 0 3px 1px -2px rgb(30 42 233 / 20%), 0 1px 5px 0 rgb(30 39 233 / 15%);
    }

    #pie {
        height: 440px;
    }

    .clearfix{
	overflow: auto;
}	
.dropzone {
  position: relative;
  height: 200px;
  border: 2px dashed #b3b3b3;
  border-radius: 4px;
  background-color: #f3f3f3;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.dropzone .msg{
	font-size: 20px;
	font-weight: bold;
	color: #c3c3c3;
	padding: 0 10px;
}
input.fileUpload{
	display: none;
}
.preview{
	margin: 10px 0;
	padding: 5px;
}
.previewData img{
	width: 100px;
	height: 100px;
	float: left;
	margin: 5px;
} 
.previewDetails{
	 display: inline-block;
    float: left;
    margin: 5px;
    padding: 8px;
}
.detail{
	  font-family: arial;
    padding: 5px;
    overflow: hidden;
    max-width: 200px;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.previewControls{
	display: inline-block;
	float: left;
	margin: 40px 30px;
}
.circle{
	border: 2px solid #5B93F5;
    border-radius: 20px;
    display: inline-block;
    height: 25px;
    width: 25px;
    margin: 5px;
    cursor: pointer;
    color: #5B93F5;
    line-height: initial;
}
.circle.upload:hover{
	border: 2px solid green;	
}
.circle.upload:hover i.fa-check{
	color: green;
}
.circle.remove:hover{
	border: 2px solid red;	
}
.circle.remove:hover i.fa-close{
	color: red;
}
.circle i{
	position: relative;
	font-size: 14px;
}
.circle i.fa-check{
	top: 3px;
	left: 5px;
}
.circle i.fa-close{	
	top: 2px;
	left: 7px;
}
</style>